{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2bb9b130",
   "metadata": {},
   "outputs": [],
   "source": [
    "'''\n",
    "1. Open a file that has one string of witnesses per\n",
    "line. \n",
    "2. Turn each line into a list.\n",
    "3. Create a list of all of those values.\n",
    "4. Print the total number of citations.\n",
    "5. Use \"set\" to get the unique witnesses.\n",
    "6. Go searching in the XML for incorrectly labeled witnesses.\n",
    "'''\n",
    "with open('witvalues.txt') as file:\n",
    "    data_list = []\n",
    "    for line in file:\n",
    "        line_list = line.split(' ')\n",
    "        for item in line_list:\n",
    "            i = item.replace('\\n', '')\n",
    "            data_list.append(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "5d742500",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "68282\n",
      "45\n"
     ]
    }
   ],
   "source": [
    "print(len(data_list))\n",
    "print(len(set(data_list)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "a006c33e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'',\n",
       " '#Ca',\n",
       " '#Ea',\n",
       " '#Gu',\n",
       " '#Ma',\n",
       " '#Mb',\n",
       " '#Nu',\n",
       " '#Pa',\n",
       " '#Pp',\n",
       " '#Pq',\n",
       " '#Pu',\n",
       " '#Px',\n",
       " '#Py',\n",
       " '#Pz',\n",
       " '#Sc',\n",
       " '#Va',\n",
       " '#Vb',\n",
       " '#Vc',\n",
       " '#Vm',\n",
       " '#Vo',\n",
       " '#Vz',\n",
       " '#m',\n",
       " '#v',\n",
       " '#α',\n",
       " '#β',\n",
       " '#γ',\n",
       " '#κ',\n",
       " '#λ',\n",
       " '#π',\n",
       " 'Gu',\n",
       " 'Ma',\n",
       " 'Nu',\n",
       " 'P#u',\n",
       " 'P#z',\n",
       " 'Pp',\n",
       " 'Px',\n",
       " 'Py',\n",
       " 'Pz',\n",
       " 'Va',\n",
       " 'Vz',\n",
       " 'm',\n",
       " 'v',\n",
       " 'α',\n",
       " 'β',\n",
       " 'γ'}"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set(data_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f61f684b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
